""" P.220 개미 전사 정답 """

# 정수 N을 입력받기
n = int(input())
# 모든 식량 정보 입력받기
array = list(map(int, input().split()))

# DP 테이블 생성, i번쨰 식량 창고까지 얻을 수 있는 최대 식량값 저장
dp = [0] * 100

# 다이나믹 프로그래밍(Dynamic Programming) 진행(보텀업)
dp[0] = array[0]
dp[1] = max(array[0], array[1])
for i in range(2, n):
    dp[i] = max(dp[i - 1], dp[i - 2] + array[i])

# 계산된 결과 출력
print(dp[n - 1])

"""
1. 식량 창고의 최대개수가 100개이므로, 미리 n번째까지의 얻을 수 있는 식량의 최대값을 저장할 배열을 100의 크기로 만들어주었다.
2. 1번째 값은 다른 선택할 수 있는 방법이 없으므로 입력받은 첫번째 식량창고의 값이 된다.
3. 2번째 값은 1번째 값과 현재 값 중 큰 값이 된다.
4. 3번째부터는 dp를 이용한 계산이 필요한데, 3번째의 값에 올 수 있는 값은
   ① 3번째 식량창고에서 얻을 수 있는 식량과 1번째 식량창고까지의 얻을 수 있던 식량의 최댓값의 합이 된다.
   ② 혹은 2번째 식량창고까지의 얻을 수 있던 식량의 최댓값. 이렇게 2가지가 가능하다.
   결국 2가지 중 큰 값이 오게 되므로 max를 이용해 dp list의 값을 채워주게 된다.
5. dp[n-1]로 n번째에 얻을 수 있는 식량의 최댓값을 return 해주었다.
"""
